<application>
  <component name="AppStorage">
    <option name="newTranslationDialogX" value="756" />
    <option name="newTranslationDialogY" value="-596" />
    <option name="pinNewTranslationDialog" value="true" />
    <histories>
      <item value="&lt;!-- This flag will preserve the fitToContents boolean value on configuration change. --&gt;" />
      <item value="&lt;!-- The top offset of the BottomSheet in the expanded-state when fitsToContent is false. The default value is 0, which results in the sheet matching the parent's top. --&gt;" />
      <item value="&lt;!-- The ratio to be used to set the height of half-expanded state in proportion to parent, when fitToContents is false. Defaults to true half, 0.5, if not explicitly set. Ratio must be a float value between 0 and 1 and produce a half-expanded state height larger than the peek height for the half-expanded state to be operational --&gt;" />
      <item value="&lt;!-- Skip the collapsed state once expanded; no effect unless it is hideable --&gt;" />
      <item value="collapsed Status" />
      <item value="blur" />
      <item value="overlap" />
      <item value="Set the distance that this view should overlap any {@link" />
      <item value="&lt;!-- Specifies how this view dodges the inset edges of the CoordinatorLayout. --&gt;" />
      <item value="&lt;!-- Specifies how this view insets the CoordinatorLayout and make some other views dodge it. --&gt;" />
      <item value="&lt;!-- Specifies how an object should position relative to an anchor, on both the X and Y axes, within its parent's bounds. --&gt;" />
      <item value="&lt;!-- The index of a keyline this view should position relative to. android:layout_gravity will affect how the view aligns to the specified keyline. --&gt;" />
      <item value="&lt;!-- Specifies how this view insets the CoordinatorLayout and make some other views" />
      <item value="&lt;!-- Push object to the top of its container, not changing its size. --&gt;" />
      <item value="insets" />
      <item value="inset" />
      <item value="dodges" />
      <item value="&lt;!-- The id of an anchor view that this view should position relative to. --&gt;" />
      <item value="&lt;!-- Minimum inset for content views within a bar. Navigation buttons and menu views are excepted. Only valid for some themes and configurations. --&gt;" />
      <item value="publish success" />
      <item value="restore" />
      <item value="User-visible label for the clip data." />
      <item value="Defines a listener callback that is invoked when the primary clip on the clipboard changes. Objects that want to register a listener call {@link android.content.ClipboardManageraddPrimaryClipChangedListener(OnPrimaryClipChangedListener) addPrimaryClipChangedListener()} with an object that implements OnPrimaryClipChangedListener." />
      <item value="Callback that is invoked by {@link android.content.ClipboardManager} when the primary clip changes." />
      <item value="Return the next offset after &lt;code&gt;start&lt;code&gt; but less than or equal to &lt;code&gt;limit&lt;code&gt; where a span of the specified type begins or ends." />
      <item value="ceiling Entry" />
      <item value="Returns a new RoomSQLiteQuery that can accept the given number of arguments and holds the" />
      <item value="&lt;!-- Defines over-scrolling behavior. This property is used only if the View is scrollable. Over-scrolling is the ability for the user to receive feedback when attempting to scroll beyond meaningful content. --&gt;" />
      <item value="&lt;!-- Controls whether a view can take focus. By default, this is &quot;auto&quot; which lets the framework determine whether a user can move focus to a view. By setting this attribute to true the view is allowed to take focus. By setting it to &quot;false&quot; the view will not take focus. This value does not impact the behavior of directly calling {@link android.view.ViewrequestFocus}, which will always request focus regardless of this view. It only impacts where focus navigation will try to move focus. --&gt;" />
      <item value="unrecoverably" />
      <item value="For example, you can specify a column name for the field or change the column's type affinity." />
      <item value="Allows specific customization about the column associated with this field." />
      <item value="properly" />
      <item value="2021-04-19 16:42:35.008 29861-29861com.ormatch.android.asmr WSystem.err: java.lang.IllegalStateException: Room cannot verify the data integrity. Looks like you've changed schema but forgot to update the version number. You can simply fix this by increasing the version number." />
      <item value="integrity" />
      <item value="If the field type is {@code long} or {@code int} (or its TypeConverter converts it to a {@code long} or {@code int}), {@link Insert} methods treat {@code 0} as not-set while inserting the item." />
      <item value="When set to {@code true}, the SQLite type affinity for the field should be {@code INTEGER}." />
      <item value="If {@code PrimaryKey} annotation is used on a {@link Embedded}d field, all columns inherited from that embedded field becomes the composite primary key (including its grand children fields)." />
      <item value="Each {@link Entity} must declare a primary key unless one of its super classes declares a primary key. If both an {@link Entity} and its super class defines a {@code PrimaryKey}, the child's {@code PrimaryKey} definition will override the parent's {@code PrimaryKey}." />
      <item value="Constant to let Room inherit the field name as the column name. If used, Room will use the field name as the column name." />
      <item value="Name of the column in the database. Defaults to the field name if not set." />
      <item value="RANDOM TOPIC" />
      <item value="ordinal" />
      <item value="wip" />
      <item value="drain" />
      <item value="Atomically terminate the container and return the contents of the last non-terminal Throwable of it." />
      <item value="Converts an {@link Iterable} sequence into an ObservableSource that emits the items in the sequence." />
      <item value="the number of elements expected from the current Observable" />
      <item value="Note that this operator requires the upstream to signal {@code onComplete} for the accumulated list to be emitted. Sources that are infinite and never complete will never emit anything through this operator and an infinite source may lead to a fatal {@code OutOfMemoryError}." />
      <item value="Normally, an ObservableSource that returns multiple items will do so by invoking its {@link Observer}'s {@link ObserveronNext onNext} method for each such item. You can change this behavior, instructing the ObservableSource to compose a list of all of these items and then to invoke the Observer's {@code onNext} function once, passing it the entire list, by calling the ObservableSource's {@code toList} method prior to calling its {@link subscribe} method." />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="635" />
        <entry key="ENGLISH" value="636" />
        <entry key="POLISH" value="1" />
        <entry key="GERMAN" value="2" />
        <entry key="RUSSIAN" value="1" />
        <entry key="FRENCH" value="1" />
        <entry key="CATALAN" value="1" />
        <entry key="CROATIAN" value="1" />
        <entry key="KURDISH" value="1" />
        <entry key="ROMANIAN" value="4" />
        <entry key="MARATHI" value="1" />
        <entry key="NORWEGIAN" value="1" />
        <entry key="SWEDISH" value="2" />
        <entry key="GREEK" value="2" />
        <entry key="ITALIAN" value="2" />
        <entry key="INDONESIAN" value="1" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1619319423007" />
  </component>
  <component name="Settings">
    <option name="youdaoTranslateSettings">
      <youdao-translate>
        <option name="appId" value="4b8c0dd3e2395c8d" />
      </youdao-translate>
    </option>
  </component>
</application>