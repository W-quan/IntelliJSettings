<application>
  <component name="AppStorage">
    <option name="newTranslationDialogX" value="756" />
    <option name="newTranslationDialogY" value="-596" />
    <option name="pinNewTranslationDialog" value="true" />
    <histories>
      <item value="big Customer Attachment" />
      <item value="wait for next active activity by delay 200ms." />
      <item value="activity destroyed, delay 200ms to wait next active activity." />
      <item value="tv processing" />
      <item value="tv pking" />
      <item value="infinite" />
      <item value="TYPE GRID THREE COLUMN" />
      <item value="reshowing" />
      <item value="SPAN COUNT THIRD" />
      <item value="the initial delay time to wait before emitting the first value of 0L period – the period of time between emissions of the subsequent numbers" />
      <item value="Deprecated Use CustomViewTarget if loading the content into a view, the download API if in the background (http:bumptech.github.ioglidedocgetting-started.htmlbackground-threads), or a CustomTarget for any specialized use-cases. Using SimpleTarget or BaseTarget is unsafe if the user does not implement onLoadCleared, resulting in recycled bitmaps being referenced from the UI and hard to root-cause crashes. See Also: Glide's Target docs page" />
      <item value="regular" />
      <item value="This app demonstrates integration with Google Cast, as well as switching between Google Cast and local playback using ExoPlayer." />
      <item value="The shader shows an overlap bitmap on top of the video. The overlay bitmap is drawn using an Android canvas, and includes the current frame's presentation timestamp, to show how to get the timestamp of the frame currently in the off-screen surface texture." />
      <item value="This app demonstrates how to use the [SurfaceControl][] API to redirect video output from ExoPlayer between different views or off-screen. `SurfaceControl` is new in Android 10, so the app requires `minSdkVersion` 29." />
      <item value="actual Height" />
      <item value="is Select Barrage" />
      <item value="TYPE INTERACTIVE" />
      <item value="Flushing State" />
      <item value="Flushing" />
      <item value="expired" />
      <item value="If we're restarted after we're complete (usually via something like a notifyDataSetChanged that starts an identical request into the same Target or View), we can simply use the resource and size we retrieved the last time around and skip obtaining a new size, starting a new load etc. This does mean that users who want to restart a load because they expect that the view size has changed will need to explicitly clear the View or Target before starting the new load." />
      <item value="Build the ErrorRequestCoordinator first if necessary so we can update parentCoordinator." />
      <item value="Only log at more verbose log levels if the user has set a fallback drawable, because fallback Drawables indicate the user expects null models occasionally." />
      <item value="Boolean internal attribute to adjust view layout based on system windows such as the status bar. If true, adjusts the padding of this view to leave space for the system windows. Will only take effect if this view is in a non-embedded activity." />
      <item value="UPLOAD DIR" />
      <item value="Using fading edges may introduce noticeable performance degradations and should be used only when required by the application's visual design. To request fading edges with API level 14 and above, use the &lt;code&gt;android:requiresFadingEdge&lt;code&gt; attribute instead. --&gt;" />
      <item value="&lt;!-- Reference to a Transition XML resource defining the desired Transition used to move Views out of the Window's content Scene when launching a new Activity. Corresponds to {@link android.view.WindowsetExitTransition(android.transition.Transition)}. --&gt;" />
      <item value="Would be faster if we didn't have to do this. Can we chop the (displayable) text so that we don't need to do this ever?" />
      <item value="Propaganda" />
      <item value="Use original text. Shouldn't matter. TODO: passing uninitizlied FontMetrics to developers. Do we need to keep this for backward compatibility? or Should we initialize them for getFontMetricsInt?" />
      <item value="Gradual" />
      <item value="tv time remain" />
      <item value="We'll end up here if the Target was cleared after the RequestManager that started the request is destroyed. That can happen for at least two reasons: 1. We call clear() on a background thread using something other than Application Context RequestManager." />
      <item value="hidden VHs are not preferred but if that is the only one we find, we rather return it" />
      <item value="IS INFINITE LOOP" />
      <item value="深情告白" />
      <item value="If this is the first child and it wants to handle system windows, we need to make sure we don't scroll it past the inset" />
      <item value="An additional flag to be used with 'snap'. If set, the view will be snapped to its top and bottom margins, as opposed to the edges of the view itself." />
      <item value="Upon a scroll ending, if the view is only partially visible then it will be snapped and scrolled to it's closest edge" />
      <item value="The view will be scroll in direct relation to scroll events. This flag needs to be set for any of the other flags to take effect. If any sibling views before this one do not have this flag, then this value has no effect" />
      <item value="When exiting (scrolling off screen) the view will be scrolled until it is 'collapsed'. The collapsed height is defined by the view's minimum height." />
      <item value="An additional flag for 'enterAlways' which modifies the returning view to only initially scroll back to it's collapsed height. Once the scrolling view has reached the end of it's scroll range, the remainder of this view will be scrolled into view." />
      <item value="When entering (scrolling on screen) the view will scroll on any downwards scroll event, regardless of whether the scrolling view is also scrolling. This is commonly referred to as the 'quick return' pattern." />
      <item value="AGENT ATTACH FAILED" />
      <item value="content Scrim" />
      <item value="The drawable to use as a scrim on top of the CollapsingToolbarLayouts content when it has been scrolled sufficiently off screen." />
      <item value="The drawable to use as a scrim on top of the C it has been scrolled sufficiently off screen." />
      <item value="Minimum inset for content views within a bar. Navigation buttons and menu views are excepted. Only valid for some themes and configurations" />
      <item value="Upon a scroll ending, if the view is only partially visible then it will be snapped and scrolled to it's closest edge." />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="741" />
        <entry key="ENGLISH" value="742" />
        <entry key="POLISH" value="1" />
        <entry key="DANISH" value="1" />
        <entry key="GERMAN" value="3" />
        <entry key="RUSSIAN" value="1" />
        <entry key="FRENCH" value="1" />
        <entry key="CATALAN" value="1" />
        <entry key="CROATIAN" value="1" />
        <entry key="KURDISH" value="1" />
        <entry key="LATIN" value="1" />
        <entry key="ROMANIAN" value="4" />
        <entry key="MARATHI" value="1" />
        <entry key="NORWEGIAN" value="1" />
        <entry key="SWEDISH" value="2" />
        <entry key="GREEK" value="2" />
        <entry key="ITALIAN" value="2" />
        <entry key="INDONESIAN" value="1" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1644993816440" />
  </component>
  <component name="Settings">
    <option name="translateDocumentation" value="true" />
  </component>
</application>