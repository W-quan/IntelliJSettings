<application>
  <component name="AppStorage">
    <histories>
      <item value="start a radio station based on the current item or skip ahead by * 30 seconds." />
      <item value="* e.g. start a radio station based on the current item or skip ahead by" />
      <item value="Add a custom action to the playback state. Actions can be used to * expose additional functionality to {@link MediaControllerCompat * Controllers} beyond what is offered by the standard transport * controls." />
      <item value="MEDIA ATTRIBUTE PLAYLIST" />
      <item value="MEDIA ATTRIBUTE ALBUM" />
      <item value="MEDIA ATTRIBUTE ARTIST" />
      <item value="ARGUMENT MEDIA ATTRIBUTE" />
      <item value="ACTION FOLLOW" />
      <item value="ACTION SKIP AD" />
      <item value="ACTION FLAG AS INAPPROPRIATE" />
      <item value="ACTION FAST FORWARD" />
      <item value="ACTION REWIND" />
      <item value="* Returns an immutable list containing only the specified object. * The returned list is serializable." />
      <item value="* Provides an API (via a cold Single) that bridges the reactive world with the callback-style world." />
      <item value="* The size is adjusted based on the current rotation of the display." />
      <item value="* Gets display metrics based on the real size of this display." />
      <item value="Make sure all annotation processors are incremental to improve your build speed." />
      <item value="incremental" />
      <item value="* Create a new component identifier from a Context and Class object." />
      <item value="¡" />
      <item value="retrieving playback state and metadata changes" />
      <item value="controlling the session via transport controls" />
      <item value="Creating a MediaController for the current media session which can be used by view models for:" />
      <item value="Allowing view models to retrieve the list of albums and songs by subscribing to changes in the MusicService's list of media items via subscribe" />
      <item value="wrapper" />
      <item value="singleton" />
      <item value="This is achieved using LiveData types." />
      <item value="The Activity and Fragments are backed by their own view models. The view model represents the underlying state of the corresponding view. When the model changes, such as" />
      <item value="achieved" />
      <item value="reflect" />
      <item value="corresponding" />
      <item value="underlying" />
      <item value="separation" />
      <item value="UAMP achieves this by using a Model-View-ViewModel architecture. This allows a separation of responsibilities between each layer." />
      <item value="see changes in the underlying player, such as playback duration" />
      <item value="Preparing media sources from URIs using UampPlaybackPreparer" />
      <item value="glue" />
      <item value="Diagram" />
      <item value="communicate" />
      <item value="It provides various mechanisms for controlling playback, receiving status updates and retrieving metadata about the current media." />
      <item value="represents an ongoing media playback session" />
      <item value="decoupling playback from the app's UI." />
      <item value="decoupling" />
      <item value="discover" />
      <item value="banner" />
      <item value="修复直播列表Banner间距问题" />
      <item value="set Hint View" />
      <item value="Specifies the radius for the corners of the gradient. If this is &gt; 0, * then the drawable is drawn in a round-rectangle, rather than a * rectangle. This property is honored only when the shape is of type * {@link #RECTANGLE}." />
      <item value="volatile" />
      <item value="Room Charm Rank View" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="169" />
        <entry key="ENGLISH" value="170" />
        <entry key="GERMAN" value="1" />
        <entry key="RUSSIAN" value="1" />
        <entry key="ROMANIAN" value="1" />
        <entry key="MARATHI" value="1" />
        <entry key="SWEDISH" value="1" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="ignoreRegExp" value="" />
    <option name="youdaoTranslateSettings">
      <youdao-translate>
        <option name="appId" value="4b8c0dd3e2395c8d" />
      </youdao-translate>
    </option>
  </component>
</application>