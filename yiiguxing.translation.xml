<application>
  <component name="AppStorage">
    <histories>
      <item value="snap" />
      <item value="Coordinator Layout" />
      <item value="ViewPager2 replaces {@link androidx.viewpager.widget.ViewPager}, addressing most of its * predecessor’s pain-points, including right-to-left layout support, vertical orientation, * modifiable Fragment collections, etc." />
      <item value="следующий" />
      <item value="Wiedergabe" />
      <item value="uses Cleartext Traffic" />
      <item value="hotspot" />
      <item value="This provider combines inputs for all possible location sources * to provide the best possible Location fix. It is implicitly * used for all API's that involve the {@link LocationRequest} * object." />
      <item value="* Name of the Fused location provider." />
      <item value="Requires the permission * {@link android.Manifest.permission#ACCESS_FINE_LOCATION}, although if the GPS is * not enabled this provider might only return coarse fixes." />
      <item value="You can query the {@link Location#getProvider()} method to determine * the origin of the location update." />
      <item value="This provider will return locations generated by other * providers." />
      <item value="&gt;This provider can be used to passively receive location updates * when other applications or services request them without actually requesting * the locations yourself." />
      <item value="A special location provider for receiving locations without actually initiating * a location fix. *" />
      <item value="Prior" />
      <item value="Prior to {@link android.os.Build.VERSION_CODES#JELLY_BEAN_MR1}, this method * always returned the SSID with no quotes around it." />
      <item value="is Satation" />
      <item value="STATION IP" />
      <item value="minimum time interval between location updates, in milliseconds" />
      <item value="toggle visibility of listen_order_button while WebSocket connect or disconnected" />
      <item value="* Root VLC object of the objects tree that this object belongs in." />
      <item value="/** Module probe flag * * A boolean during module probing when the probe is &quot;forced&quot;. * See \ref module_need()." />
      <item value="Common public properties for all VLC objects. * Object also have private properties maintained by the core, see * \ref vlc_object_internals_t" />
      <item value="/* synchronized Surfaces accessed by an other thread from JNI */" />
      <item value="Facilities for retrieving external libraries and building them for systems that don't have the right versions." />
      <item value="doc/ - Miscellaneous documentation." />
      <item value="Main structure representing an input thread. This structure is mostly * private. The only public fields are read-only and constant." />
      <item value="We don't want a high input priority here or we'll * end-up sucking up all the CPU time */" />
      <item value="* reads the stream, cleans up and waits" />
      <item value="* This is the &quot;normal&quot; thread that spawns the input processing chain," />
      <item value="/* Set the destructor when we are sure we are initialized */" />
      <item value="* if we are preparsing, use the i_preparse_depth of the parent item */" />
      <item value="Retain" />
      <item value="The policy here is to ignore that we were created using a different * libvlc_instance, because we don't really care *" />
      <item value="* If needed, this waits for any other thread to release it." />
      <item value="Acquires a mutex." />
      <item value="Prevent gradle from building native code with ndk; we have our own Makefile for it." />
      <item value="A slave is an external input source that may contains an additional subtitle * track (like a .srt) or an additional audio track (like a .ac3). *" />
      <item value="Add a slave to the current media." />
      <item value="Returns the int descriptor. It's highly unlikely you should be calling this. Please discuss * your needs with a libcore maintainer before using this method. * @hide internal use only" />
      <item value="Instances of the file descriptor class serve as an opaque handle * to the underlying machine-specific structure representing an open * file, an open socket, or another source or sink of bytes. The * main practical use for a file descriptor is to create a * &lt;code&gt;FileInputStream&lt;/code&gt; or &lt;code&gt;FileOutputStream&lt;/code&gt; to * contain it." />
      <item value="* Adds the given transport type to this {@code NetworkCapability} instance. * Multiple transports may be applied sequentially. Note that when searching * for a network to satisfy a request, any listed in the request will satisfy the request. * For example {@code TRANSPORT_WIFI} and {@code TRANSPORT_ETHERNET} added to a * {@code NetworkCapabilities} would cause either a Wi-Fi network or an Ethernet network * to be selected. This is logically different than * {@code NetworkCapabilities.NET_CAPABILITY_*} listed above. *" />
      <item value="* Adds the given transport requirement to this builder. These represent * the set of allowed transports for the request. Only networks using one * of these transports will satisfy the request. If no particular transports * are required, none should be specified here. See {@link NetworkCapabilities} * for {@code TRANSPORT_*} definitions. *" />
      <item value="Indicates that this network is available for general use. If this is not set * applications should not attempt to communicate on this network. Note that this * is simply informative and not enforcement - enforcement is handled via other means. * Set by default." />
      <item value="NET CAPABILITY NOT RESTRICTED" />
      <item value="Indicates this is a network that has the ability to reach a Wi-Fi direct * peer." />
      <item value="Similarly if an application * needs an unmetered network for a bulk transfer it can specify that rather than assuming * all cellular based connections are metered and all Wi-Fi based connections are not. */" />
      <item value="Rather than indicate a need for Wi-Fi because an application * needs high bandwidth and risk obsolescence when a new, fast network appears (like LTE), * the application should specify it needs high bandwidth." />
      <item value="Rather than indicate a need for" />
      <item value="Rather than indicate a need for Wi-Fi because an application * needs high bandwidth and risk obsolescence when a new, f" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="114" />
        <entry key="ENGLISH" value="115" />
        <entry key="GERMAN" value="1" />
        <entry key="RUSSIAN" value="1" />
        <entry key="ROMANIAN" value="1" />
        <entry key="MARATHI" value="1" />
      </map>
    </option>
  </component>
</application>