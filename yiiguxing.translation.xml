<application>
  <component name="AppStorage">
    <option name="newTranslationDialogX" value="756" />
    <option name="newTranslationDialogY" value="-596" />
    <option name="pinNewTranslationDialog" value="true" />
    <histories>
      <item value="reduction" />
      <item value="collect" />
      <item value="is Permanent Vip" />
      <item value="signed" />
      <item value="history record" />
      <item value="collect product" />
      <item value="others service" />
      <item value="_service" />
      <item value="我的服务" />
      <item value="Save an object allocation if we've cached an EngineResource (the typical case)." />
      <item value="A null resource indicates that the load failed, usually due to an exception." />
      <item value="TODO: Seems like we might as well put this in the memory cache instead of just recycling it since we've gotten this far..." />
      <item value="We have to post Runnables in a loop. Typically there will be very few callbacks. AccessorMethod seems to be a false positive" />
      <item value="Returns a future that can be used to do a blocking get on a background thread." />
      <item value="estimate Memory Usage" />
      <item value="Returns an estimate of the bitmap heap memory usage for this RemoteViews." />
      <item value="As much as is reasonably practical, the hashCode method defined by class {@code Object} does return distinct integers for distinct objects. (This is typically implemented by converting the internal address of the object into an integer, but this implementation technique is not required by the Java&amp;trade; programming language.)" />
      <item value="&lt;li&gt;If two objects are equal according to the {@code equals(Object)} method, then calling the {@code hashCode} method on each of the two objects must produce the same integer result. &lt;li&gt;It is &lt;em&gt;not&lt;em&gt; required that if two objects are unequal according to the {@link java.lang.Objectequals(java.lang.Object)} method, then calling the {@code hashCode} method on each of the two objects must produce distinct integer results. However, the programmer should be aware that producing distinct integer results for unequal objects may improve the performance of hash tables." />
      <item value="&lt;li&gt;Whenever it is invoked on the same object more than once during an execution of a Java application, the {@code hashCode} method must consistently return the same integer, provided no information used in {@code equals} comparisons on the object is modified. This integer need not remain consistent from one execution of an application to another execution of the same application." />
      <item value="Returns a hash code value for the object. This method is supported for the benefit of hash tables such as those provided by" />
      <item value="If the request is completed, beginning again will ensure the result is re-delivered, triggering RequestListeners and Targets. If the request is failed, beginning again will restart the request, giving it another chance to complete. If the request is already running, we can let it continue running without interruption." />
      <item value="We only store a bitmap cache in the root of the RemoteViews." />
      <item value="Now that everything is initialized and duplicated, setting a new BitmapCache will re-initialize the cache." />
      <item value="Recursively sets BitmapCache in the hierarchy and update the bitmap ids." />
      <item value="Maps bitmaps to unique indicies to avoid Bitmap duplication." />
      <item value="Because pruning can remove the need for bitmaps, we reconstruct the bitmap cache" />
      <item value="Merges the passed RemoteViews actions with this RemoteViews actions according to action-specific merge rules." />
      <item value="We only write the bitmap cache if we are the root RemoteViews, as this cache is shared by all children." />
      <item value="quote" />
      <item value="compatible getLoadMoreViewCount and getEmptyViewCount may change" />
      <item value="load Activities" />
      <item value="EVENT ROOM GIFT GIVING CLICK DETERMINE" />
      <item value="Flags for {@link fromHtml(String, int, ImageGetter, TagHandler)}: Separate block-level elements with line breaks (single newline character) in between. This inverts the {@link Spanned} to HTML string conversion done with the option {@link TO_HTML_PARAGRAPH_LINES_INDIVIDUAL}." />
      <item value="It is useful when ViewModel observes some data and you need to clear this subscription to prevent a leak of this ViewModel." />
      <item value="This method will be called when this ViewModel is no longer used and will be destroyed." />
      <item value="ViewModels can also be used as a communication layer between different Fragments of an Activity. Each Fragment can acquire the ViewModel using the same key via their Activity. This allows communication between Fragments in a de-coupled fashion such that they never need to talk to the other Fragment directly." />
      <item value="communication" />
      <item value="Typical" />
      <item value="standpoint" />
      <item value="ViewModel's only responsibility is to manage the data for the UI. It &lt;b&gt;should never&lt;b&gt; access your view hierarchy or hold a reference back to the Activity or the Fragment." />
      <item value="observability" />
      <item value="acquire" />
      <item value="purpose" />
      <item value="&lt;p&gt;The default animation to dismiss this dialog is a fade-out transition through a windowAnimation. Call {@link setDismissWithAnimation(true)} if you want to utilize the BottomSheet animation instead." />
      <item value="This function can be called from a few different use cases, including Swiping the dialog down or calling `dismiss()` from a `BottomSheetDialogFragment`, tapping outside a dialog, etc..." />
      <item value="idempotent" />
      <item value="Name shadowed: iterator¡" />
      <item value="destination" />
      <item value="MIC QUEUE UPDATED" />
      <item value="iv collesed" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="635" />
        <entry key="ENGLISH" value="636" />
        <entry key="POLISH" value="1" />
        <entry key="GERMAN" value="2" />
        <entry key="RUSSIAN" value="1" />
        <entry key="FRENCH" value="1" />
        <entry key="CATALAN" value="1" />
        <entry key="CROATIAN" value="1" />
        <entry key="KURDISH" value="1" />
        <entry key="ROMANIAN" value="4" />
        <entry key="MARATHI" value="1" />
        <entry key="NORWEGIAN" value="1" />
        <entry key="SWEDISH" value="2" />
        <entry key="GREEK" value="2" />
        <entry key="ITALIAN" value="2" />
        <entry key="INDONESIAN" value="1" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1624260851323" />
  </component>
  <component name="Settings">
    <option name="translateDocumentation" value="true" />
    <option name="youdaoTranslateSettings">
      <youdao-translate>
        <option name="appId" value="4b8c0dd3e2395c8d" />
      </youdao-translate>
    </option>
  </component>
</application>