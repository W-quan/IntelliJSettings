<application>
  <component name="AppStorage">
    <histories>
      <item value="unknown" />
      <item value="Bubble" />
      <item value="Eefect" />
      <item value="* &lt;p&gt;Instead of providing a media notification that is completely custom, a developer can set * this style and still obtain system decorations like the notification header with the expand * affordance and actions." />
      <item value="/** Subscriber priority to influence the order of event delivery. * Within the same delivery thread ({@link ThreadMode}), higher priority subscribers will receive events before * others with a lower priority. The default priority is 0. Note: the priority does *NOT* affect the order of * delivery among subscribers with different {@link ThreadMode}s! */" />
      <item value="* If true, delivers the most recent sticky event (posted with * {@link EventBus#postSticky(Object)}) to this subscriber (if event available)." />
      <item value="primitive" />
      <item value="meaningless" />
      <item value="// nothing to do (Note - still had to inc generation, since may have ongoing work)" />
      <item value="* A generic ordered collection of elements that supports adding and removing elements. * @param E the type of elements contained in the list. The mutable list is invariant on its element type." />
      <item value="bounds" />
      <item value="* Same as lineTo, but the coordinates are considered relative to the last * point on this contour. If there is no previous point, then a moveTo(0,0) * is inserted automatically." />
      <item value="counter-clockwise" />
      <item value="counter" />
      <item value="clockwise" />
      <item value="The direction to wind the circle's contour" />
      <item value="* Returns an optional array of private data, used by the UI system for * some bitmaps. Not intended to be called by applications." />
      <item value="anchor" />
      <item value="There is no this decoration type." />
      <item value="Active" />
      <item value="Head" />
      <item value="came" />
      <item value="load Headwear List" />
      <item value="List" />
      <item value="prod Type" />
      <item value="source" />
      <item value="fake Bold Text" />
      <item value="is Present" />
      <item value="Barrier" />
      <item value="Valid" />
      <item value="* Designates global scope for an xml element." />
      <item value="* &lt;p class='note'&gt;The SharedPreferences.Editor interface * isn't expected to be implemented directly. However, if you * previously did implement it and are now getting errors * about missing &lt;code&gt;apply()&lt;/code&gt;, you can simply call * {@link #commit} from &lt;code&gt;apply()&lt;/code&gt;. */" />
      <item value="* &lt;p&gt;As {@link SharedPreferences} instances are singletons within * a process, it's safe to replace any instance of {@link #commit} with * {@link #apply} if you were already ignoring the return value. *" />
      <item value="* {@link SharedPreferences} does a regular {@link #commit} * while a {@link #apply} is still outstanding, the * {@link #commit} will block until all async commits are * completed as well as the commit itself." />
      <item value="* {@link SharedPreferences} immediately but starts an * asynchronous commit to disk and you won't be notified of * any failures. If another editor on this" />
      <item value="* &lt;p&gt;Unlike {@link #commit}, which writes its preferences out * to persistent storage synchronously, {@link #apply} * commits its changes to the in-memory" />
      <item value="* &lt;p&gt;Note that when two editors are modifying preferences at the same * time, the last one to call apply wins." />
      <item value="single" />
      <item value="RELATIONSHIP" />
      <item value="statistic" />
      <item value="ancestors" />
      <item value="* @param detectMoves True if DiffUtil should try to detect moved items, false otherwise." />
      <item value="need experience for upgrade medal" />
      <item value="还差30经验升级到LV 2" />
      <item value="integrity" />
      <item value="在一起23天" />
      <item value="two" />
      <item value="period" />
      <item value="* the initial delay time to wait before emitting the first value of 0L" />
      <item value="* A functional interface (callback) that returns true or false for the given input value." />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="455" />
        <entry key="ENGLISH" value="456" />
        <entry key="GERMAN" value="1" />
        <entry key="RUSSIAN" value="1" />
        <entry key="CATALAN" value="1" />
        <entry key="CROATIAN" value="1" />
        <entry key="KURDISH" value="1" />
        <entry key="ROMANIAN" value="2" />
        <entry key="MARATHI" value="1" />
        <entry key="SWEDISH" value="2" />
        <entry key="GREEK" value="2" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="ignoreRegExp" value="" />
    <option name="translateDocumentation" value="true" />
    <option name="youdaoTranslateSettings">
      <youdao-translate>
        <option name="appId" value="4b8c0dd3e2395c8d" />
      </youdao-translate>
    </option>
  </component>
</application>