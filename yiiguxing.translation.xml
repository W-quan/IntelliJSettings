<application>
  <component name="AppStorage">
    <option name="newTranslationDialogX" value="756" />
    <option name="newTranslationDialogY" value="-596" />
    <option name="pinNewTranslationDialog" value="true" />
    <histories>
      <item value="Type checking has run into a recursive problem. Easiest workaround: specify types of your declarations explicitly¡" />
      <item value="This means that the View was a child of the LayoutManager when layout started but has been removed by the LayoutManager. It might have been removed from the adapter or simply become invisible due to other factors. You can distinguish these two cases by checking the change flags that were passed to" />
      <item value="&lt;!-- Defines the layout animation to use the first time the ViewGroup is laid out. Layout animations can also be started manually after the first layout. --&gt;" />
      <item value="tacit" />
      <item value="dimension" />
      <item value="resolve Layout Direction" />
      <item value="&lt;!-- Describes the content of a view so that a autofill service can fill in the appropriate data. Multiple hints can be combined in a comma separated list or an array of strings to mean e.g. emailAddress or postalAddress. --&gt;" />
      <item value="write your mood at this moment" />
      <item value="写上你此刻的心情..." />
      <item value="Represents a property, such as a named `val` or `var` declaration. Instances of this class are obtainable by the `::` operator. See the [Kotlin language documentation](https:kotlinlang.orgdocsreferencereflection.html) for more information." />
      <item value="bg btn bottle disenable" />
      <item value="@return The index of the child to draw this iteration." />
      <item value="iteration" />
      <item value="Returns the index of the child to draw for this iteration. Override this if you want to change the drawing order of children. By default, it returns i." />
      <item value="It works using the {@link ViewGroupgetChildDrawingOrder(int, int)} method, so any case that applies to that method also applies to this callback. For example, changing the drawing order of two views will not have any effect if their elevation values are different since elevation overrides the result of this callback." />
      <item value="A callback interface that can be used to alter the drawing order of RecyclerView children." />
      <item value="noinspection DataBindingWithoutKapt" />
      <item value="Returns a reversed read-only view of the original List. All changes made in the original list will be reflected in the reversed one." />
      <item value="Used to reverse item traversal and layout order. This behaves similar to the layout change for RTL views. When set to true, first item is laid out at the end of the UI, second item is laid out before it etc." />
      <item value="Generally this method should be used for scaling and translating view item for better (different) view presentation of layouting." />
      <item value="we expect only fixed sized item for now" />
      <item value="thorw bottle" />
      <item value="iv throw bottle" />
      <item value="bg fragment bottle centent" />
      <item value="A required callback invoked when the resource is no longer valid and must be freed." />
      <item value="@return Resource dimension value multiplied by the appropriate metric and truncated to integer pixels." />
      <item value="Retrieve a dimensional for a particular resource ID for use as an offset in raw pixels. This is the same as {@link getDimension}, except the returned value is converted to integer pixels for you. An offset conversion involves simply truncating the base value to an integer." />
      <item value="escape" />
      <item value="radial" />
      <item value="ring" />
      <item value="oval" />
      <item value="bg border dialog user info room card_2 w" />
      <item value="d人领取" />
      <item value="iv confirm" />
      <item value="free audio for whole site" />
      <item value="dialog new user gift package" />
      <item value="doctype" />
      <item value="digit" />
      <item value="reduction" />
      <item value="collect" />
      <item value="is Permanent Vip" />
      <item value="signed" />
      <item value="history record" />
      <item value="collect product" />
      <item value="others service" />
      <item value="_service" />
      <item value="我的服务" />
      <item value="Save an object allocation if we've cached an EngineResource (the typical case)." />
      <item value="A null resource indicates that the load failed, usually due to an exception." />
      <item value="TODO: Seems like we might as well put this in the memory cache instead of just recycling it since we've gotten this far..." />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="635" />
        <entry key="ENGLISH" value="636" />
        <entry key="POLISH" value="1" />
        <entry key="GERMAN" value="2" />
        <entry key="RUSSIAN" value="1" />
        <entry key="FRENCH" value="1" />
        <entry key="CATALAN" value="1" />
        <entry key="CROATIAN" value="1" />
        <entry key="KURDISH" value="1" />
        <entry key="ROMANIAN" value="4" />
        <entry key="MARATHI" value="1" />
        <entry key="NORWEGIAN" value="1" />
        <entry key="SWEDISH" value="2" />
        <entry key="GREEK" value="2" />
        <entry key="ITALIAN" value="2" />
        <entry key="INDONESIAN" value="1" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1626665003251" />
  </component>
  <component name="Settings">
    <option name="translateDocumentation" value="true" />
    <option name="youdaoTranslateSettings">
      <youdao-translate>
        <option name="appId" value="4b8c0dd3e2395c8d" />
      </youdao-translate>
    </option>
  </component>
</application>