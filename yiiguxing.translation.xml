<application>
  <component name="AppStorage">
    <histories>
      <item value="prefix" />
      <item value="panel" />
      <item value="* Space is a lightweight View subclass that may be used to create gaps between components * in general purpose layouts." />
      <item value="PRODUCTION" />
      <item value="DEFUALT" />
      <item value="Companion" />
      <item value="remain" />
      <item value="Gradle build daemon disappeared unexpectedly (it may have been killed or may have crashed)" />
      <item value="abbreviate" />
      <item value="Rect" />
      <item value="* &lt;li&gt;As a container for a specific interaction with one or more child views&lt;/li&gt;" />
      <item value="* &lt;li&gt;As a top-level application decor or chrome layout&lt;/li&gt;" />
      <item value="敬请期待" />
      <item value="notice" />
      <item value="This method is used to put the over device UI into temporary modes * where the user's attention is focused more on the application content, * by dimming or hiding surrounding system affordances. This is typically * used in conjunction with {@link Window#FEATURE_ACTION_BAR_OVERLAY * Window.FEATURE_ACTION_BAR_OVERLAY}, allowing the applications content * to be placed behind the action bar (and with these flags other system * affordances) so that smooth transitions between hiding and showing them * can be done." />
      <item value="Request that the visibility of the status bar or other screen/window * decorations be changed." />
      <item value="charm" />
      <item value="iv sign" />
      <item value="level" />
      <item value="production" />
      <item value="head home print audio" />
      <item value="iv constellation" />
      <item value="attention" />
      <item value="tv Personalized Signature" />
      <item value="constellation" />
      <item value="queue Mic" />
      <item value="Erban" />
      <item value="charm Seq" />
      <item value="exper Url" />
      <item value="exper Seq" />
      <item value="has Pretty No" />
      <item value="decorated" />
      <item value="to set the * corresponding custom views to display." />
      <item value="set Custom Heads Up Content View" />
      <item value="Instead of providing a media notification that is completely custom, a developer can set * this style and still obtain system decorations like the notification header with the expand * affordance and actions." />
      <item value="* Notification style for media custom views that are decorated by the system." />
      <item value="Decorated Media Custom View Style" />
      <item value="Notifications created with MediaStyle will have their category set to * {@link androidx.core.app.NotificationCompat#CATEGORY_TRANSPORT CATEGORY_TRANSPORT} * unless you set a different category using * {@link androidx.core.app.NotificationCompat.Builder#setCategory(String) * setCategory()}." />
      <item value="Unlike the other styles provided here, MediaStyle can also modify the standard-size * content view; by providing action indices to * {@link #setShowActionsInCompactView(int...)} you can promote up to 3 actions to be displayed * in the standard view alongside the usual content." />
      <item value="* be treated as album artwork." />
      <item value="* pushbuttons, suitable for transport controls. The Bitmap given to" />
      <item value="* #addAction(int, CharSequence, PendingIntent) addAction} will be shown as icon-only" />
      <item value="* In the expanded form, up to 5" />
      <item value="you can promote up to 3 actions to be displayed * in the standard view alongside the usual content." />
      <item value="/** * Add an action to this notification. Actions are typically displayed by * the system as a button adjacent to the notification content. * &lt;br&gt; * Action buttons won't appear on platforms prior to Android 4.1. Action * buttons depend on expanded notifications, which are only available in Android 4.1 * and later. To ensure that an action button's functionality is always available, first * implement the functionality in the {@link android.app.Activity} that starts when a user * clicks the notification (see {@link #setContentIntent setContentIntent()}), and then * enhance the notification by implementing the same functionality with * {@link #addAction addAction()}. *" />
      <item value="start a radio station based on the current item or skip ahead by * 30 seconds." />
      <item value="* e.g. start a radio station based on the current item or skip ahead by" />
      <item value="Add a custom action to the playback state. Actions can be used to * expose additional functionality to {@link MediaControllerCompat * Controllers} beyond what is offered by the standard transport * controls." />
      <item value="MEDIA ATTRIBUTE PLAYLIST" />
      <item value="MEDIA ATTRIBUTE ALBUM" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="214" />
        <entry key="ENGLISH" value="215" />
        <entry key="GERMAN" value="1" />
        <entry key="RUSSIAN" value="1" />
        <entry key="CATALAN" value="1" />
        <entry key="ROMANIAN" value="1" />
        <entry key="MARATHI" value="1" />
        <entry key="SWEDISH" value="1" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="ignoreRegExp" value="" />
    <option name="youdaoTranslateSettings">
      <youdao-translate>
        <option name="appId" value="4b8c0dd3e2395c8d" />
      </youdao-translate>
    </option>
  </component>
</application>