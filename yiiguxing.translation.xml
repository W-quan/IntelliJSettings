<application>
  <component name="AppStorage">
    <histories>
      <item value="show Time Mode" />
      <item value="show" />
      <item value="dither" />
      <item value="point" />
      <item value="Mute" />
      <item value="resume" />
      <item value="pauseing Music" />
      <item value="pauseing" />
      <item value="去应援" />
      <item value="he have not received any gift yet" />
      <item value="guild" />
      <item value="UNION" />
      <item value="version" />
      <item value="BOTTLE" />
      <item value="PREVIEW" />
      <item value="* The RecyclerView is currently being dragged by outside input such as user touch input." />
      <item value="* The RecyclerView is currently animating to a final position while not under * outside control." />
      <item value="SCROLL STATE SETTLING" />
      <item value="* SnapHelper tries to handle fling as well but for this to work properly, the * {@link RecyclerView.LayoutManager} must implement the {@link RecyclerView.SmoothScroller.ScrollVectorProvider} interface or * you should override {@link #onFling(int, int)} and handle fling manually." />
      <item value="* Class intended to support snapping for a {@link RecyclerView}." />
      <item value="sort" />
      <item value="Home Foot Print Fragment" />
      <item value="Duration" />
      <item value="curr Duration" />
      <item value="TYPE VERIFIED" />
      <item value="TYPE NO SUBMITTED" />
      <item value="TYPE NO" />
      <item value="ellipsize" />
      <item value="column" />
      <item value="INDIVIDUAL" />
      <item value="decorate" />
      <item value="birth" />
      <item value="Bottle" />
      <item value="payload" />
      <item value="battle" />
      <item value="ic voice battle play" />
      <item value="play" />
      <item value="ffc 808" />
      <item value="head" />
      <item value="Media" />
      <item value="set Compound Drawables Relative With Intrinsic Bounds" />
      <item value="Praise Event" />
      <item value="* Returns a view of the portion of this list between the specified * {@code fromIndex}, inclusive, and {@code toIndex}, exclusive. (If * {@code fromIndex} and {@code toIndex} are equal, the returned list is * empty.) The returned list is backed by this list, so non-structural * changes in the returned list are reflected in this list, and vice-versa. * The returned list supports all of the optional list operations." />
      <item value="EXPEND" />
      <item value="* &lt;li&gt;As a container for a specific interaction with one or more child views&lt;/li&gt;" />
      <item value="* &lt;li&gt;As a top-level application decor or chrome layout&lt;/li&gt;" />
      <item value="基础资料" />
      <item value="info" />
      <item value="支持自定义hintview" />
      <item value="parallax" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="387" />
        <entry key="ENGLISH" value="388" />
        <entry key="GERMAN" value="1" />
        <entry key="RUSSIAN" value="1" />
        <entry key="CATALAN" value="1" />
        <entry key="CROATIAN" value="1" />
        <entry key="KURDISH" value="1" />
        <entry key="ROMANIAN" value="1" />
        <entry key="MARATHI" value="1" />
        <entry key="SWEDISH" value="2" />
        <entry key="GREEK" value="2" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="ignoreRegExp" value="" />
    <option name="translateDocumentation" value="true" />
    <option name="youdaoTranslateSettings">
      <youdao-translate>
        <option name="appId" value="4b8c0dd3e2395c8d" />
      </youdao-translate>
    </option>
  </component>
</application>